import{_ as r,M as i,p as l,q as n,R as a,N as h,V as t,t as e,a1 as _}from"./framework-c4f3d865.js";const o={},s=a("h1",{id:"基础",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#基础","aria-hidden":"true"},"#"),e(" 基础")],-1),c=a("blockquote",null,[a("p",null,"todo")],-1),u={class:"table-of-contents"},f=_('<h2 id="_1-基础1" tabindex="-1"><a class="header-anchor" href="#_1-基础1" aria-hidden="true">#</a> 1. 基础1</h2><h3 id="_1-1-语法" tabindex="-1"><a class="header-anchor" href="#_1-1-语法" aria-hidden="true">#</a> 1.1 语法</h3><h4 id="什么是面向对象" tabindex="-1"><a class="header-anchor" href="#什么是面向对象" aria-hidden="true">#</a> 什么是面向对象？</h4><p>面相对象是一种思想，世间万物都可以看成是对象。当让对于变成来说，主要强调的是面向对象编程（OOP）， Java 是面向对象的编程语言，而面向对象主要的好处如下：</p><h3 id="_1-2-反射" tabindex="-1"><a class="header-anchor" href="#_1-2-反射" aria-hidden="true">#</a> 1.2 反射</h3><h3 id="_1-3-泛型" tabindex="-1"><a class="header-anchor" href="#_1-3-泛型" aria-hidden="true">#</a> 1.3 泛型</h3><h3 id="_1-4-异常" tabindex="-1"><a class="header-anchor" href="#_1-4-异常" aria-hidden="true">#</a> 1.4 异常</h3><h3 id="_1-5-注解" tabindex="-1"><a class="header-anchor" href="#_1-5-注解" aria-hidden="true">#</a> 1.5 注解</h3><h3 id="_1-6-spi机制" tabindex="-1"><a class="header-anchor" href="#_1-6-spi机制" aria-hidden="true">#</a> 1.6 SPI机制</h3><h2 id="_2-集合" tabindex="-1"><a class="header-anchor" href="#_2-集合" aria-hidden="true">#</a> 2. 集合</h2><h2 id="_3-io" tabindex="-1"><a class="header-anchor" href="#_3-io" aria-hidden="true">#</a> 3. IO</h2><h2 id="_4-多线程与并发" tabindex="-1"><a class="header-anchor" href="#_4-多线程与并发" aria-hidden="true">#</a> 4. 多线程与并发</h2><h2 id="_5-jvm" tabindex="-1"><a class="header-anchor" href="#_5-jvm" aria-hidden="true">#</a> 5. JVM</h2><h2 id="_6-版本特性" tabindex="-1"><a class="header-anchor" href="#_6-版本特性" aria-hidden="true">#</a> 6. 版本特性</h2><h2 id="_7-开发工具" tabindex="-1"><a class="header-anchor" href="#_7-开发工具" aria-hidden="true">#</a> 7. 开发工具</h2>',15);function x(b,p){const d=i("router-link");return l(),n("div",null,[s,c,a("nav",u,[a("ul",null,[a("li",null,[h(d,{to:"#_1-基础1"},{default:t(()=>[e("1. 基础1")]),_:1}),a("ul",null,[a("li",null,[h(d,{to:"#_1-1-语法"},{default:t(()=>[e("1.1 语法")]),_:1})]),a("li",null,[h(d,{to:"#_1-2-反射"},{default:t(()=>[e("1.2 反射")]),_:1})]),a("li",null,[h(d,{to:"#_1-3-泛型"},{default:t(()=>[e("1.3 泛型")]),_:1})]),a("li",null,[h(d,{to:"#_1-4-异常"},{default:t(()=>[e("1.4 异常")]),_:1})]),a("li",null,[h(d,{to:"#_1-5-注解"},{default:t(()=>[e("1.5 注解")]),_:1})]),a("li",null,[h(d,{to:"#_1-6-spi机制"},{default:t(()=>[e("1.6 SPI机制")]),_:1})])])]),a("li",null,[h(d,{to:"#_2-集合"},{default:t(()=>[e("2. 集合")]),_:1})]),a("li",null,[h(d,{to:"#_3-io"},{default:t(()=>[e("3. IO")]),_:1})]),a("li",null,[h(d,{to:"#_4-多线程与并发"},{default:t(()=>[e("4. 多线程与并发")]),_:1})]),a("li",null,[h(d,{to:"#_5-jvm"},{default:t(()=>[e("5. JVM")]),_:1})]),a("li",null,[h(d,{to:"#_6-版本特性"},{default:t(()=>[e("6. 版本特性")]),_:1})]),a("li",null,[h(d,{to:"#_7-开发工具"},{default:t(()=>[e("7. 开发工具")]),_:1})])])]),f])}const v=r(o,[["render",x],["__file","java.html.vue"]]);export{v as default};
