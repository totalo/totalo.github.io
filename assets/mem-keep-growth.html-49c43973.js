import{_ as e,M as o,p as i,q as c,R as s,N as t,V as p,t as a,a1 as l}from"./framework-c4f3d865.js";const r="/images/mem-keep-growth-1.png",u="/images/mem-keep-growth-2.png",g="/images/mem-keep-growth-3.png",d="/images/mem-keep-growth-4.png",m="/images/mem-keep-growth-5.png",k={},h=s("h1",{id:"升级-nacos-后-系统内存占用一直在增长-但是进程占用内存不高",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#升级-nacos-后-系统内存占用一直在增长-但是进程占用内存不高","aria-hidden":"true"},"#"),a(" 升级 nacos 后，系统内存占用一直在增长，但是进程占用内存不高")],-1),_={class:"table-of-contents"},b=l(`<h3 id="_0x00-背景描述" tabindex="-1"><a class="header-anchor" href="#_0x00-背景描述" aria-hidden="true">#</a> 0x00 背景描述</h3><p>项目是 spring-cloud-gateway 的项目，使用的技术栈是 spring cloud + nacos ，版本如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>2.3.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.version</span><span class="token punctuation">&gt;</span></span>Hoxton.SR9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>2.2.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>公司要求将 nacos 版本从 1.x 升级到 2.x，由此根据官方的参考文档以及公司推荐的版本，升级到如下版本：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>2.3.12.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.boot.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.version</span><span class="token punctuation">&gt;</span></span>Hoxton.SR12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>2.2.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.cloud.alibaba.version</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的 nacos-client 升级到 2.1.0，spring 版本从 5.1.18 升级到了 5.2.15</p><p>官方参考文档：https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E</p><p>升级后，开始进行网关灰度的时候发现，系统的内存占用和java 的进程占用的内存对应不上，并且系统占用内存一直在增长，由于使用的是容器部署，容器内部没有其余的占用内存的进程。</p><p>理论上而言，系统内存的占用应该近似和进程的内存占用，但是现象不一样，线上的现象是 ** java 进程占用的比系统占用的少，系统内存占用比较高，并且还一直在增长**。见下图：</p><p><img src="`+r+'" alt="image"></p><h3 id="_0x01-问题分析" tabindex="-1"><a class="header-anchor" href="#_0x01-问题分析" aria-hidden="true">#</a> 0x01 问题分析</h3><p>与正常的版本相比， 比较核心的就是升级了 spring cloud 的版本以及 nacos-client，其余的没有什么变化。并且网关只使用了 discovery 功能用于发现下游的服务实例，其余的应该没有什么区别。</p><p>由于是内存的占用一直在增长，通过free -h 查看发现，没有特别的异常，只是已使用一直在增长，其余没有任何的异常，vmstat 查看也只是memory 的 free 一直在减少。查看/proc/meminfo 也没有什么特别的异常。</p><p><img src="'+u+'" alt="image"></p><p>经过 n 种方式查询，没有什么特别的异常，后续通过 slabtop 对比正常的版本和异常的版本发现，dentry 项两个机器差了一个数量级。</p><p>正常版本： <img src="'+g+'" alt="正常版本"></p><p>异常版本： <img src="'+d+'" alt="异常版本版本"></p><p>通过图上可以明显看出来，异常的 dentry 占用比正常的高一个数量级。</p><p>但是也不知道后续怎么排查了，找到了系统容器组的同事。经过他的排查定位发现/tmp 目录创建了上百万个文件。最终定位为 spring 的一个 bug 导致的。详情见：https://github.com/spring-projects/spring-framework/issues/27092</p><p><img src="'+m+'" alt="异常版本版本"></p><h3 id="_0x02-问题解决" tabindex="-1"><a class="header-anchor" href="#_0x02-问题解决" aria-hidden="true">#</a> 0x02 问题解决</h3><p>经过查看 pr，发现为默认创建文件夹导致内存占用高，影响的 jar 包是 spring-web，查看 github 发现，5.2.16 版本修复了这个问题，果断进行升级后，系统正常了。</p><p>后续请教了一下内核组的同事，他说是通过drgn工具定位的，其余的办法好像查不到，工具具体放参考资料里面。</p><h3 id="_0x03-参考资料" tabindex="-1"><a class="header-anchor" href="#_0x03-参考资料" aria-hidden="true">#</a> 0x03 参考资料</h3><p>1、spring bug issue ： https://github.com/spring-projects/spring-framewor</p><p>2、slab 内存占用高排查：http://aliyun123.cn/news/924.html</p><p>3、排查工具：https://github.com/osandov/drgn/pull/306#issuecomment-1619742195</p>',27);function x(v,f){const n=o("router-link");return i(),c("div",null,[h,s("nav",_,[s("ul",null,[s("li",null,[t(n,{to:"#_0x00-背景描述"},{default:p(()=>[a("0x00 背景描述")]),_:1})]),s("li",null,[t(n,{to:"#_0x01-问题分析"},{default:p(()=>[a("0x01 问题分析")]),_:1})]),s("li",null,[t(n,{to:"#_0x02-问题解决"},{default:p(()=>[a("0x02 问题解决")]),_:1})]),s("li",null,[t(n,{to:"#_0x03-参考资料"},{default:p(()=>[a("0x03 参考资料")]),_:1})])])]),b])}const w=e(k,[["render",x],["__file","mem-keep-growth.html.vue"]]);export{w as default};
